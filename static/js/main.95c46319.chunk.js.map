{"version":3,"sources":["Components/Climate/chart.js","Components/Climate/Climate.js","Components/PlugStates/Fan/FanButton.js","Components/PlugStates/Mister/MisterButton.js","Components/PlugStates/WaterPump/WaterPumpButton.js","Components/ToDo/Item.js","Components/ToDo/ToDoList.js","Components/Sidebar/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["Chart","props","options","data","Climate","state","weather","cloudCover","windSpeed","gauge","gaugeHumidity","fan","lineChartData","labels","datasets","id","type","label","backgroundColor","pointBorderColor","pointHoverBorderColor","borderColor","fill","borderWidth","lineTension","showLine","spanGaps","showPoint","lineChartOptions","responsive","maintainAspectRatio","title","text","display","tooltips","enabled","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes","pieData","hoverBackgroundColor","indoorSubscription","messageType","temperature","Number","this","ws","WebSocket","onopen","obj","console","log","send","JSON","stringify","fetch","method","headers","Accept","authorization","then","res","json","oldTemp2DataSet","push","setState","description","catch","err","onmessage","e","value","parse","oldTempDataSet","newTempDataSet","PieDataSet1","splice","newPieChartData","newTemp2DataSet","newPieData","newChart1Data","concat","Date","toLocaleTimeString","weekday","hour","minute","gaugeVal","humidity","gaugeHumidityVal","Container","className","style","position","zIndex","Row","height","CardGroup","marginTop","Card","fontSize","data-aos","Title","Body","padding","textAlign","forceRender","fluidWidth","minValue","maxValue","startColor","endColor","segments","needleColor","width","React","Component","Fan","buttonColor","fanSubscription","ws3","on","alignText","class","Mister","MisterSubscription","alignItems","WaterPump","Item","message","deleteNote","marginLeft","onClick","ToDoList","useState","notes","setNotes","input","setInput","length","noteLength","setNoteLength","handleSubmit","preventDefault","map","note","filter","onSubmit","placeholder","onChange","target","Sidebar","result","expand","window","addEventListener","h","document","documentElement","b","body","st","sh","clientHeight","scrollPercent","getElementById","button","querySelector","classList","add","remove","Navbar","fixed","bg","Toggle","aria-controls","borderRadius","marginBottom","Collapse","Col","App","ch","innerHeight","scrollHeight","setScrollHeight","setClientHeight","handleResize","useEffect","removeEventListener","Aos","init","fluid","margin","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.95c46319.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst Chart = props => <Line\r\n    options={props.options}\r\n    data ={props.data}\r\n     />;\r\nexport default Chart;","import React from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport LineChart from \"./chart\";\r\nimport ReactSpeedometer from \"react-d3-speedometer\";\r\nimport { Container, Row, Card, CardGroup } from \"react-bootstrap\";\r\nimport './Climate.css'\r\n\r\nclass Climate extends React.Component {\r\n  state = {\r\n    weather: \"\",\r\n    cloudCover: 0,\r\n    windSpeed: 0,\r\n    gauge: {},\r\n    gaugeHumidity: {},\r\n    fan: {},\r\n    lineChartData: {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          id: 0,\r\n          type: \"line\",\r\n          label: \"Indoor Temperature\",\r\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n          pointBorderColor: \"rgba(100,200,100, 0)\",\r\n          pointHoverBorderColor: \"rgba(100,200,100, 1)\",\r\n          borderColor: \"rgba(135,206,250,1)\",\r\n          fill: true,\r\n          borderWidth: \"2\",\r\n          lineTension: 1,\r\n          data: [],\r\n          showLine: true,\r\n          spanGaps: true,\r\n          showPoint: false,\r\n        },\r\n        {\r\n          id: 1,\r\n          type: \"line\",\r\n          label: \"Outdoor Temperature\",\r\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n          pointBorderColor: \"rgba(135,206,250,0)\",\r\n          pointHoverBorderColor: \"rgba(135,206,250,1)\",\r\n          borderColor: \"rgba(100,200,100, 1)\",\r\n          fill: true,\r\n          borderWidth: \"2\",\r\n          lineTension: 1,\r\n          data: [],\r\n          showLine: true,\r\n          spanGaps: true,\r\n          showPoint: false,\r\n        },\r\n        {\r\n          id: 2,\r\n          type: \"line\",\r\n          label: \"Water Temperature\",\r\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n          pointBorderColor: \"rgba(128,0,128,0)\",\r\n          pointHoverBorderColor: \"rgba(235,06,250,1)\",\r\n          borderColor: \"rgba(128,0,128,1)\",\r\n          fill: true,\r\n          borderWidth: \"2\",\r\n          lineTension: 1,\r\n          data: [],\r\n          showLine: true,\r\n          spanGaps: true,\r\n          showPoint: false,\r\n        },\r\n      ],\r\n    },\r\n    lineChartOptions: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      title: { text: \"Temperature Charts\", display: true },\r\n      tooltips: {\r\n        enabled: true,\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              autoSkip: true,\r\n              maxTicksLimit: 5,\r\n              beginAtZero: true,\r\n              gridLines: {\r\n                display: false,\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        xAxes: [\r\n          {\r\n            ticks: {\r\n              autoSkip: true,\r\n              maxTicksLimit: 10,\r\n              gridLines: {\r\n                display: false,\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    pieData: {\r\n      labels: [\"clouds\", \"clear sky\"],\r\n      datasets: [\r\n        {\r\n          data: [0, 100],\r\n          backgroundColor: [\"#D3D3D3\", \"#00FFFF\"],\r\n          hoverBackgroundColor: [\"#A9A9A9\", \"#0000CD\"],\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  ////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  componentDidMount() {\r\n    const indoorSubscription = {\r\n      messageType: \"propertyStatus\",\r\n      data: {\r\n        temperature: Number,\r\n      },\r\n    };\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    // let logObj\r\n    // let outsideLogObj\r\n    // fetch(\r\n    //   \"https://sherringiscaring.webthings.io/logs/things/http---192.168.1.100-things-DHTSensor/properties/temperature\",\r\n    //   {\r\n    //     method: \"GET\",\r\n    //     headers: {\r\n    //       Accept: \"application/json\",\r\n    //       authorization:\r\n    //         \"Bearer eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjhjOWVhNjA3LWE1ZWQtNDEyZS1iYmUxLWU2Yjk4OTk3NzM3NyJ9.eyJyb2xlIjoidXNlcl90b2tlbiIsImlhdCI6MTU4OTc0ODIxNywiaXNzIjoiaHR0cHM6Ly9zaGVycmluZ2lzY2FyaW5nLm1vemlsbGEtaW90Lm9yZyJ9.BvpmWFRxZsgQ25BAUcWjqyXE-ZmXOllgZN6xUJ9THewr6ckyo-MEhjgicPfknK8_KoJ1wolSrMIH6Wz1IaC8Xg\",\r\n    //     },\r\n    //   }\r\n    // )\r\n    // .then((res) => res.json())\r\n    // .then((res) => logObj = res)\r\n    // .then((logObj) => {\r\n    //   console.log(logObj);\r\n    //   logObj.forEach(Object => {\r\n    //     this.state.lineChartData.datasets[0].data.push(Object.value)\r\n    //     // this.state.lineChartData.datasets[0].data.shift()\r\n    //     this.state.lineChartData.labels.push(new Date(Object.date).toLocaleTimeString([], { weekday: \"short\", hour: '2-digit', minute: '2-digit' }))\r\n    //     // this.state.lineChartData.labels.shift()\r\n    //   })\r\n    // })\r\n    \r\n\r\n    \r\n    // fetch(\r\n    //   \"https://sherringiscaring.webthings.io/logs/things/weather-7122537431f4dc3d166c957717ee2b498815d683/properties/temperature\",\r\n    //   {\r\n    //     method: \"GET\",\r\n    //     headers: {\r\n    //       Accept: \"application/json\",\r\n    //       authorization:\r\n    //         \"Bearer eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjhjOWVhNjA3LWE1ZWQtNDEyZS1iYmUxLWU2Yjk4OTk3NzM3NyJ9.eyJyb2xlIjoidXNlcl90b2tlbiIsImlhdCI6MTU4OTc0ODIxNywiaXNzIjoiaHR0cHM6Ly9zaGVycmluZ2lzY2FyaW5nLm1vemlsbGEtaW90Lm9yZyJ9.BvpmWFRxZsgQ25BAUcWjqyXE-ZmXOllgZN6xUJ9THewr6ckyo-MEhjgicPfknK8_KoJ1wolSrMIH6Wz1IaC8Xg\",\r\n    //     },\r\n    //   }\r\n    // )\r\n    // .then((res) => res.json())\r\n    // .then((res) => {\r\n    //   outsideLogObj = res;\r\n    //   console.log(outsideLogObj)\r\n    //   outsideLogObj.forEach(Object => {\r\n    //     this.state.lineChartData.datasets[1].data.push(Object.value)\r\n    //     // this.state.lineChartData.datasets[1].data.shift()\r\n    //     this.state.lineChartData.labels.push(new Date(Object.date).toLocaleTimeString([], { weekday: \"short\", hour: '2-digit', minute: '2-digit' }))\r\n    //     // this.state.lineChartData.labels.shift()\r\n    //     // console.log(this.state.lineChartData.datasets[1].data)\r\n    //   })\r\n    // })\r\n\r\n\r\n\r\n\r\n      // const oldTempDataSet = this.state.lineChartData.datasets[0];\r\n      // const newTempDataSet = { ...oldTempDataSet };\r\n      // const oldTemp2DataSet = this.state.lineChartData.datasets[1];\r\n      // const newTemp2DataSet = { ...oldTemp2DataSet };\r\n\r\n      // const newChart1Data = {\r\n      //   ...this.state.lineChartData.datasets,\r\n      //   datasets: [newTempDataSet, newTemp2DataSet],\r\n      //   ...this.state.lineChartData.datasets[1],\r\n      //   datasets: [newTempDataSet, newTemp2DataSet],\r\n\r\n      //   labels: this.state.lineChartData.labels.concat(\r\n      //     new Date().toLocaleTimeString([], { weekday: \"short\", hour: '2-digit', minute: '2-digit' })\r\n      //   ),\r\n      // };\r\n      // console.log(newChart1Data)\r\n      // this.setState({ lineChartData: newChart1Data })\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    this.ws = new WebSocket(\r\n      \"wss://sherringiscaring.webthings.io/things/http---192.168.1.100-things-DHTSensor?jwt=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjRhMTJiNWY5LWVlNTAtNGFkMi1hNzNlLTg5ODVjODRhNTU3ZiJ9.eyJyb2xlIjoidXNlcl90b2tlbiIsImlhdCI6MTU5MTczNDAzMCwiaXNzIjoiaHR0cHM6Ly9zaGVycmluZ2lzY2FyaW5nLm1vemlsbGEtaW90Lm9yZyJ9.UGVluprHnYwU1IW8HGHi5KzIdAy0tPm6BwIaCFJmcuWfP2bO7LUpYmuDZzLTKaepW8ZO5N80EiIzzTfeqB7Xsg\",\r\n      \"webthing\"\r\n    );\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    this.ws.onopen = () => {\r\n      console.log(\"Connection Opened! (Inside Temp)\");\r\n      this.ws.send(JSON.stringify(indoorSubscription));\r\n      \r\n\r\n      // get a single point of data to correspond with first onMessage. NOTE: May not be needed after logs\r\n      let obj;\r\n      fetch(\r\n        \"https://sherringiscaring.webthings.io/things/weather-7122537431f4dc3d166c957717ee2b498815d683/properties\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            authorization:\r\n              \"Bearer eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjhjOWVhNjA3LWE1ZWQtNDEyZS1iYmUxLWU2Yjk4OTk3NzM3NyJ9.eyJyb2xlIjoidXNlcl90b2tlbiIsImlhdCI6MTU4OTc0ODIxNywiaXNzIjoiaHR0cHM6Ly9zaGVycmluZ2lzY2FyaW5nLm1vemlsbGEtaW90Lm9yZyJ9.BvpmWFRxZsgQ25BAUcWjqyXE-ZmXOllgZN6xUJ9THewr6ckyo-MEhjgicPfknK8_KoJ1wolSrMIH6Wz1IaC8Xg\",\r\n          },\r\n        }\r\n      )\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          obj = res;\r\n          console.log(res)\r\n          outsideData();\r\n          this.setState({\r\n            weather: `${res.description}`,\r\n            windSpeed: res.windSpeed,\r\n            cloudCover: res.cloudCover,\r\n            \r\n          });\r\n        })\r\n        .catch((err) => console.log(err));\r\n      function outsideData() {\r\n        oldTemp2DataSet.data.push(obj.temperature);\r\n      }\r\n      const oldTemp2DataSet = this.state.lineChartData.datasets[1];\r\n    };\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    this.ws.onmessage = (e) => {\r\n      const value = JSON.parse(e.data);\r\n\r\n      const oldTempDataSet = this.state.lineChartData.datasets[0];\r\n      const newTempDataSet = { ...oldTempDataSet };\r\n\r\n      if (value.data.temperature) {\r\n        // console.log(value.data);\r\n        var obj;\r\n        fetch(\r\n          \"https://sherringiscaring.webthings.io/things/weather-7122537431f4dc3d166c957717ee2b498815d683/properties\",\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              authorization:\r\n                \"Bearer eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjhjOWVhNjA3LWE1ZWQtNDEyZS1iYmUxLWU2Yjk4OTk3NzM3NyJ9.eyJyb2xlIjoidXNlcl90b2tlbiIsImlhdCI6MTU4OTc0ODIxNywiaXNzIjoiaHR0cHM6Ly9zaGVycmluZ2lzY2FyaW5nLm1vemlsbGEtaW90Lm9yZyJ9.BvpmWFRxZsgQ25BAUcWjqyXE-ZmXOllgZN6xUJ9THewr6ckyo-MEhjgicPfknK8_KoJ1wolSrMIH6Wz1IaC8Xg\",\r\n            },\r\n          }\r\n        )\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            obj = res;\r\n            outsideData();\r\n            this.setState({\r\n              weather: `${res.description}`,\r\n              windSpeed: res.windSpeed,\r\n              cloudCover: res.cloudCover,\r\n              pieData: newPieChartData,\r\n            });\r\n          })\r\n          .catch((err) => console.log(err));\r\n\r\n\r\n        const oldTemp2DataSet = this.state.lineChartData.datasets[1];\r\n        const PieDataSet1 = this.state.pieData.datasets[0];\r\n\r\n        function outsideData() {\r\n          oldTemp2DataSet.data.push(obj.temperature);\r\n          PieDataSet1.data.splice(0, 1, obj.cloudCover);\r\n          PieDataSet1.data.splice(1, 1, 100 - obj.cloudCover);\r\n          // console.log(this.state.weatherImg)\r\n        }\r\n\r\n        const newTemp2DataSet = { ...oldTemp2DataSet };\r\n        newTempDataSet.data.push(value.data.temperature);\r\n        const newPieData = { ...PieDataSet1 };\r\n\r\n        const newChart1Data = {\r\n          ...this.state.lineChartData.datasets,\r\n          datasets: [newTempDataSet, newTemp2DataSet],\r\n          ...this.state.lineChartData.datasets[1],\r\n          datasets: [newTempDataSet, newTemp2DataSet],\r\n\r\n          labels: this.state.lineChartData.labels.concat(\r\n            new Date().toLocaleTimeString([], { weekday: \"short\", hour: '2-digit', minute: '2-digit' })\r\n          ),\r\n        };\r\n        const newPieChartData = {\r\n          ...this.state.pieData.datasets,\r\n          datasets: [newPieData],\r\n        };\r\n\r\n        const gaugeVal = value.data.temperature;\r\n        // console.log([this.state.lineChartData.datasets[0].data, this.state.lineChartData.datasets[1].data])\r\n        this.setState({ lineChartData: newChart1Data, gauge: gaugeVal });\r\n        console.log(this.state);\r\n      }\r\n      if (value.data.humidity) {\r\n        const gaugeHumidityVal = value.data.humidity;\r\n        this.setState({ gaugeHumidity: gaugeHumidityVal });\r\n      }\r\n    };\r\n  }\r\n\r\n  \r\n  // MAX_TEMP_READINGS = 4610\r\n  //////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  render() {\r\n    return (\r\n      <Container className={'something'} style={{position: 'relative', zIndex: '1'}}>\r\n          <Row style={{ height: '36vh', zIndex: \"1\", backgroundColor: 'rgba(255,255,255, 0.5)',  }}>\r\n            <LineChart\r\n              className=\"line chart\"\r\n              data={this.state.lineChartData}\r\n              options={this.state.lineChartOptions}\r\n            />\r\n          </Row>\r\n          <CardGroup style={{marginTop: \"1%\"}}>\r\n            <Card style = {{ fontSize: \"calc(50% + 2vmin)\", backgroundColor: 'rgba(255,255,255, 0.4)'}} data-aos=\"fade-up\" >\r\n              <Card.Title>Current Indoor Temperature</Card.Title>\r\n              <Card.Body style={{ padding: \"0\", textAlign: \"center\", }}>\r\n              <ReactSpeedometer\r\n                forceRender = {true}\r\n                fluidWidth={false}\r\n                minValue={10}\r\n                maxValue={30}\r\n                startColor=\"red\"\r\n                endColor=\"green\"\r\n                segments={5}\r\n                value={this.state.gauge}\r\n                needleColor=\"purple\"\r\n                height={150}\r\n                width={175}\r\n              />\r\n              </Card.Body>\r\n            </Card>\r\n            <Card style = {{ fontSize: \"calc(50% + 2vmin)\", backgroundColor: 'rgba(255,255,255, 0.4)'}} data-aos=\"fade-up\">\r\n              <Card.Title>Current Indoor Humidity</Card.Title>\r\n              <Card.Body style={{ padding: \"0\", textAlign: \"center\"}}>\r\n              <ReactSpeedometer\r\n                forceRender = {true}\r\n                fluidWidth={false}\r\n                minValue={0}\r\n                maxValue={60}\r\n                startColor=\"red\"\r\n                endColor=\"green\"\r\n                segments={3}\r\n                value={this.state.gaugeHumidity}\r\n                needleColor=\"purple\"\r\n                height={150}\r\n                width={175}\r\n              />\r\n              </Card.Body>\r\n            </Card>\r\n            <Card style = {{ fontSize: \"calc(50% + 2vmin)\", backgroundColor: 'rgba(255,255,255, 0.4)' }} data-aos=\"fade-up\">\r\n              Cloud Cover: {this.state.cloudCover}%\r\n              <Pie \r\n              // height={100}\r\n              // width={100}\r\n              // maintainAspectRatio={false}\r\n              data={this.state.pieData}\r\n              style ={{ backgroundColor: 'rgba(255,255,255, 0.4)'}}\r\n              />\r\n            </Card>\r\n            <Card className={\"box4\"} style = {{ position: 'relative', fontSize: \"calc(50% + 1vmin)\", backgroundColor: 'rgba(255,255,255, 0.4)', zIndex: \"12\" }} data-aos=\"fade-up\" >\r\n             <br />weather images being changed at the moment\r\n             <br />wind speed: {this.state.windSpeed} mph\r\n             <br />weather: {this.state.weather}\r\n            </Card>\r\n            {/* <ToDoList style={{display: \"hidden\"}}/> */}\r\n          </CardGroup>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Climate;\r\n","import React, { Component } from \"react\";\r\nimport './fanLight.css'\r\nimport {Container} from 'react-bootstrap'\r\n\r\nclass Fan extends Component {\r\n  state = { fan: \"off\", buttonColor: 'led-red' };\r\n  componentDidMount() {\r\n    const fanSubscription = {\r\n      \"messageType\": \"propertyStatus\",\r\n      \"data\": {\r\n        //\"on\": true,\r\n        \"on\": true\r\n      },\r\n    };\r\n\r\n    this.ws3 = new WebSocket(\r\n      \"wss://sherringiscaring.webthings.io/things/tplink-8006FCBECD4C4C98FFDE442CEED8F07019989CAB?jwt=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjRhMTJiNWY5LWVlNTAtNGFkMi1hNzNlLTg5ODVjODRhNTU3ZiJ9.eyJyb2xlIjoidXNlcl90b2tlbiIsImlhdCI6MTU5MTczNDAzMCwiaXNzIjoiaHR0cHM6Ly9zaGVycmluZ2lzY2FyaW5nLm1vemlsbGEtaW90Lm9yZyJ9.UGVluprHnYwU1IW8HGHi5KzIdAy0tPm6BwIaCFJmcuWfP2bO7LUpYmuDZzLTKaepW8ZO5N80EiIzzTfeqB7Xsg\",\r\n      \"webthing\"\r\n    );\r\n\r\n    this.ws3.onopen = () => {\r\n      console.log(\"Connection Opened! (Fan)\");\r\n      this.ws3.send(JSON.stringify(fanSubscription));\r\n    };\r\n\r\n    this.ws3.onmessage = (e) => {\r\n      const value = JSON.parse(e.data);\r\n      if (value.data.on == true) {\r\n        this.setState({ fan: \"on\", buttonColor: \"led-green\" });\r\n      }\r\n      else if (value.data.on == false){\r\n        this.setState({ fan: \"off\", buttonColor: \"led-red\" });\r\n      }\r\n    };\r\n  }\r\n\r\n    render(){\r\n        return(\r\n          <Container style={{alignText: \"center\"}}>\r\n            <div class={this.state.buttonColor}></div>\r\n            <br/>\r\n            <p>Fan: {this.state.fan}</p>\r\n          </Container>\r\n        )\r\n    }\r\n}\r\nexport default Fan;","import React, { Component } from \"react\";\r\nimport {Container, Row} from 'react-bootstrap'\r\n\r\n\r\n\r\nclass Mister extends Component {\r\n  state = { Mister: \"off\", buttonColor: \"led-red\" };\r\n  componentDidMount() {\r\n    const MisterSubscription = {\r\n      \"messageType\": \"propertyStatus\",\r\n      \"data\": {\r\n        \"on\": true,\r\n      },\r\n    };\r\n\r\n    this.ws = new WebSocket(\r\n      \"wss://sherringiscaring.webthings.io/things/tplink-8006289E78CEF13619AF8FDE7F8FE2B31B28BAFA?jwt=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjRhMTJiNWY5LWVlNTAtNGFkMi1hNzNlLTg5ODVjODRhNTU3ZiJ9.eyJyb2xlIjoidXNlcl90b2tlbiIsImlhdCI6MTU5MTczNDAzMCwiaXNzIjoiaHR0cHM6Ly9zaGVycmluZ2lzY2FyaW5nLm1vemlsbGEtaW90Lm9yZyJ9.UGVluprHnYwU1IW8HGHi5KzIdAy0tPm6BwIaCFJmcuWfP2bO7LUpYmuDZzLTKaepW8ZO5N80EiIzzTfeqB7Xsg\",\r\n      \"webthing\"\r\n    );\r\n\r\n    this.ws.onopen = () => {\r\n      console.log(\"Connection Opened! (Mister)\");\r\n      this.ws.send(JSON.stringify(MisterSubscription));\r\n    };\r\n\r\n    this.ws.onmessage = (e) => {\r\n      const value = JSON.parse(e.data);\r\n      if (value.data.on == true) {\r\n        this.setState({ Mister: \"on\", buttonColor: \"led-green\" });\r\n      }\r\n      else if (value.data.on == false){\r\n        this.setState({ Mister: \"off\", buttonColor: \"led-red\" });\r\n      }\r\n    };\r\n  }\r\n\r\n    render(){\r\n        return(\r\n          <Container style={{alignItems:\"center\", alignText: \"center\"}}>\r\n            <div class={this.state.buttonColor}></div>\r\n            <br />\r\n            <p>Mister: {this.state.Mister}</p>\r\n          </Container>\r\n        )\r\n    }\r\n}\r\nexport default Mister;","import React, { Component } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nclass WaterPump extends Component {\r\n    state = { WaterPump: \"on\", buttonColor: \"led-green\" };\r\n    // componentDidMount() {\r\n    //   const WaterPumpSubscription = {\r\n    //     \"messageType\": \"propertyStatus\",\r\n    //     \"data\": {\r\n    //       \"on\": true,\r\n    //     },\r\n    //   };\r\n  \r\n    //   this.ws = new WebSocket(\r\n        // \"wss://sherringiscaring.webthings.io/things/tplink-8006289E78CEF13619AF8FDE7F8FE2B31B28BAFA?jwt=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjRhMTJiNWY5LWVlNTAtNGFkMi1hNzNlLTg5ODVjODRhNTU3ZiJ9.eyJyb2xlIjoidXNlcl90b2tlbiIsImlhdCI6MTU5MTczNDAzMCwiaXNzIjoiaHR0cHM6Ly9zaGVycmluZ2lzY2FyaW5nLm1vemlsbGEtaW90Lm9yZyJ9.UGVluprHnYwU1IW8HGHi5KzIdAy0tPm6BwIaCFJmcuWfP2bO7LUpYmuDZzLTKaepW8ZO5N80EiIzzTfeqB7Xsg\",\r\n        // \"webthing\"\r\n    //   );\r\n  \r\n    //   this.ws.onopen = () => {\r\n    //     console.log(\"Connection Opened! (WaterPump)\");\r\n    //     this.ws.send(JSON.stringify(WaterPumpSubscription));\r\n    //   };\r\n  \r\n    //   this.ws.onmessage = (e) => {\r\n    //     const value = JSON.parse(e.data);\r\n        // if (value.data.on == true) {\r\n        //   this.setState({ WaterPump: \"on\", buttonColor: \"led-green\" });\r\n        // }\r\n        // else if (value.data.on == false){\r\n        //   this.setState({ WaterPump: \"off\", buttonColor: \"led-red\" });\r\n        // }\r\n    //   };\r\n    // }\r\n  \r\n      render(){\r\n          return(\r\n            <Container style={{alignItems:\"center\", alignText: \"center\"}}>\r\n              <div class={this.state.buttonColor}></div>\r\n              <br />\r\n              <p>WaterPump: {this.state.WaterPump}</p>\r\n            </Container>\r\n          )\r\n      }\r\n  }\r\n  export default WaterPump;","import React from \"react\";\r\n\r\nconst Item = ({ message, id, deleteNote }) => {\r\n  return (\r\n    <div className=\"Item\">\r\n        {message}\r\n        <button style={{marginLeft: \"2%\"}} onClick={() => deleteNote(id)}>x</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;","import React, { useState } from \"react\";\r\nimport Item from \"./Item\";\r\nimport { Card } from \"react-bootstrap\";\r\n// import \"./todo.css\"\r\n\r\nconst ToDoList = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [noteLength, setNoteLength] = useState(notes.length + 1);\r\n\r\n  const handleSubmit = (e, notes, setNotes, input, setInput) => {\r\n    e.preventDefault();\r\n    const id = notes.length ? notes[notes.length - 1].id + 1 : 0;\r\n    setNotes([...notes, { id, message: input }]);\r\n    setInput(\"\");\r\n    setNoteLength(noteLength + 1);\r\n    console.log(noteLength);\r\n  };\r\n\r\n  const deleteNote = (id, notes, setNotes) => {\r\n    setNotes(notes.filter((note) => note.id != id));\r\n    setNoteLength(noteLength - 1);\r\n    console.log(noteLength);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {notes.length > 0 ? (\r\n        <>\r\n          <Card className=\"todo\" style={{ width: \"70%\", marginLeft: \"15%\", marginTop: '2%', backgroundColor: \"rgba(255, 255, 255, 0.6)\" }}>\r\n            <Card.Title>Farm To-Do-List</Card.Title>\r\n            <Card.Body style={{ padding: \"0\" }}>\r\n              {notes.map((note) => (\r\n                <Item\r\n                  message={note.message}\r\n                  id={note.id}\r\n                  deleteNote={(id) => deleteNote(id, notes, setNotes)}\r\n                />\r\n              ))}\r\n              <form\r\n                style={{ padding: \"0\" }}\r\n                onSubmit={(e) =>\r\n                  handleSubmit(e, notes, setNotes, input, setInput)\r\n                }\r\n              >\r\n                <input\r\n                  placeholder=\"or add a custom item...\"\r\n                  onChange={(e) => setInput(e.target.value)}\r\n                  value={input}\r\n                />\r\n                {/* <button>add</button> */}\r\n              </form>\r\n            </Card.Body>\r\n          </Card>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Card className=\"todo\" style={{ width: \"70%\", marginLeft: \"15%\", backgroundColor: \"rgba(255, 255, 255, 0.6)\" }} data-aos=\"fade-up\">\r\n            <Card.Title>Farm To-Do-List</Card.Title>\r\n            <Card.Body style={{ padding: \"0\" }}>\r\n              <p>\r\n                Everything is currently taken care of!\r\n                <br />\r\n                As parts of the farm need attention, such as water level going\r\n                too high, eratic sensor values, or weekly maintenance items, the\r\n                list will automatically populate\r\n              </p>\r\n              <form\r\n                style={{ padding: \"0\" }}\r\n                onSubmit={(e) =>\r\n                  handleSubmit(e, notes, setNotes, input, setInput)\r\n                }\r\n              >\r\n                <input\r\n                  placeholder=\"or add a custom item...\"\r\n                  onChange={(e) => setInput(e.target.value)}\r\n                  value={input}\r\n                />\r\n                {/* <button>add</button> */}\r\n              </form>\r\n            </Card.Body>\r\n          </Card>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ToDoList;\r\n","import React, {useState} from \"react\";\r\nimport { Navbar, Container, Card, Row, Col } from \"react-bootstrap\";\r\nimport ToDoList from \"../ToDo/ToDoList\";\r\nimport Mister from \"../PlugStates/Mister/MisterButton\";\r\nimport Fan from \"../PlugStates/Fan/FanButton\";\r\nimport WaterPump from \"../PlugStates/WaterPump/WaterPumpButton\";\r\nimport \"./Sidebar.css\";\r\n\r\nconst Sidebar = () => {\r\n\r\n  // var and function to get percentage of screen scrolled\r\n  var result = 0;\r\n  var scrollPercent = () => {\r\n    const h = document.documentElement,\r\n      b = document.body,\r\n      st = \"scrollTop\",\r\n      sh = \"scrollHeight\";\r\n    result = ((h[st] || b[st]) / ((h[sh] || b[sh]) - h.clientHeight)) * 100;\r\n    console.log(result);\r\n  };\r\n\r\n  // scroll effects function\r\n  var expand = \"\";\r\n  window.addEventListener(\"scroll\", () => {\r\n    scrollPercent();\r\n    const nav = document.getElementById(\"nav\");\r\n    const button = document.querySelector(\".navbar-toggler\");\r\n    if (result >= 80) {\r\n      // nav.classList.remove(\"notBottom\");\r\n      // nav.classList.add(\"bottom\");\r\n      // document.getElementById(\"basic-navbar-nav\").className =\r\n      //   \"navbar-collapse collapse show\";\r\n      button.classList.add(\"hide\");\r\n    } else {\r\n      // nav.classList.remove(\"bottom\");\r\n      // nav.classList.add(\"notBottom\");\r\n      expand = \"auto\";\r\n      // document.getElementById(\"basic-navbar-nav\").className =\r\n      //   \"navbar-collapse collapse collapse\";\r\n      button.classList.remove(\"hide\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Navbar id=\"nav\" fixed=\"bottom\" bg=\"none\" expand={expand}>\r\n      <Navbar.Toggle\r\n        aria-controls=\"basic-navbar-nav\"\r\n        style={{ backgroundColor: \"lightblue\", borderRadius: \"10%\", marginBottom: \"3%\", marginLeft: \"3%\" }}\r\n      > view <br /> automation\r\n        \r\n      </Navbar.Toggle>\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Row>\r\n          <ToDoList style={{backgroundColor: \"white\"}}/>\r\n        </Row>\r\n        <Row style={{width: \"70%\", marginLeft: \"15%\"}}>\r\n          <Col>\r\n            <Fan />\r\n          </Col>\r\n          <Col>\r\n            <Mister />\r\n          </Col>\r\n          <Col>\r\n            <WaterPump />\r\n          </Col>\r\n        </Row>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Climate from \"./Components/Climate/Climate\";\r\nimport Fan from \"./Components/PlugStates/Fan/FanButton\";\r\nimport Mister from \"./Components/PlugStates/Mister/MisterButton\";\r\nimport WaterPump from \"./Components/PlugStates/WaterPump/WaterPumpButton\";\r\nimport \"./App.css\";\r\nimport ToDoList from \"./Components/ToDo/ToDoList\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Sidebar from \"./Components/Sidebar/Sidebar\";\r\nimport Aos from \"aos\";\r\nimport \"aos/dist/aos.css\"\r\n\r\nconst App = () => {\r\n\r\n  var ch = window.innerHeight\r\n  var sh = document.documentElement.scrollHeight\r\n  const [scrollHeight, setScrollHeight] = useState(sh)\r\n  const [clientHeight, setClientHeight] = useState(ch)\r\n  \r\n  const handleResize = () => {\r\n    setScrollHeight(document.documentElement.scrollHeight)\r\n    setClientHeight(window.innerHeight)\r\n  }\r\n  useEffect(function(){\r\n    window.addEventListener('resize', handleResize())\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize())\r\n    }\r\n }, []);\r\n\r\n  useEffect(() => {\r\n    Aos.init({})\r\n    }, []);\r\n    // AOS allows for easy fade-in animations for cards on a scrolling screen\r\n    // AOS animation docs: https://michalsnik.github.io/aos/\r\n    // AOS animation video howto example: https://www.youtube.com/watch?v=JcHLxzrsRS4\r\n  return (\r\n    <>\r\n    {/* adding 60 to the height handles some computer screen errors. Should optimize this later */}\r\n      {sh > ch + 100 ? (\r\n        <Container\r\n          fluid\r\n          style={{ height: `${sh}`, position: \"absolute\", zIndex: \"1\" }}\r\n          className=\"app-container\"\r\n        >\r\n          <Row>\r\n            <Climate />\r\n          </Row>\r\n          <Sidebar />\r\n          <ToDoList\r\n            style={{ backgroundColor: \"rgba(255, 255, 255, 0.6)\" }}\r\n            data-aos=\"fade-up\"\r\n          />\r\n          {/* <Card style={{width: \"70%\", marginLeft: \"15%\" , display: \"none\"}} data-aos=\"fade-up\"> */}\r\n          <Row\r\n            style={{\r\n              backgroundColor: \"rgba(255, 255, 255, 0.6)\",\r\n              width: \"70%\",\r\n              marginLeft: \"15%\",\r\n            }}\r\n          >\r\n            <Col>\r\n              <Fan />\r\n            </Col>\r\n            <Col>\r\n              <Mister />\r\n            </Col>\r\n            <Col>\r\n              <WaterPump />\r\n            </Col>\r\n          </Row>\r\n          {/* </Card> */}\r\n        </Container>\r\n      ) : (\r\n        <>\r\n          <Container\r\n            fluid\r\n            style={{\r\n              height: \"100vh\",\r\n              position: \"absolute\",\r\n              zIndex: \"1\",\r\n              margin: \"0\",\r\n            }}\r\n            className=\"app-container\"\r\n          >\r\n            <Row data-aos=\"fade-right\" style={{}}>\r\n              <Climate />\r\n            </Row>\r\n            <Row\r\n              style={{\r\n                width: \"80%\",\r\n                marginLeft: \"10%\",\r\n                // height: \"25%\",\r\n                marginBottom: \"0\",\r\n              }}\r\n              data-aos=\"fade-left\"\r\n            >\r\n              <ToDoList data-aos=\"fade-right\" />\r\n            </Row>\r\n            <Row\r\n              style={{\r\n                // height: \"4%\",\r\n                width: \"54%\",\r\n                marginLeft: \"23%\",\r\n                backgroundColor: \"rgba(255, 255, 255, 0.6)\",\r\n              }}\r\n              data-aos=\"fade-up\"\r\n            >\r\n              <Col>\r\n                <Fan />\r\n              </Col>\r\n              <Col>\r\n                <Mister />\r\n              </Col>\r\n              <Col>\r\n                <WaterPump />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}